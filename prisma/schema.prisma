generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Administrador {
  id    Int    @id @default(autoincrement())
  cpf   String @unique
  senha String

  created_at DateTime @default(now())
}

model Medico {
  id               Int    @id @default(autoincrement())
  nome             String
  cpf              String @unique
  crm              String @unique
  estado           String
  atuacao          String
  email            String @unique
  senha            String
  confirmacaoSenha String

  estadoNome Estado @relation(fields: [estado], references: [nome], onUpdate: Cascade, onDelete: Cascade)

  meusPacientes MeuPaciente[]

  isActive   Boolean
  created_at DateTime @default(now())
}

model MeuPaciente {
  id                Int     @id @default(autoincrement())
  nome              String  @unique
  nomeDaMae         String
  aniversario       String
  idade             Int
  inicioDosSintomas String
  comorbidades      Boolean
  anamnese          String

  medicoId Int
  medico   Medico @relation(fields: [medicoId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  created_at DateTime @default(now())
}

model Paciente {
  id               Int    @id @default(autoincrement())
  nome             String @unique
  cpf              String @unique
  aniversario      String
  idade            Int
  estado           String
  email            String @unique
  telefone         String 
  senha            String
  confirmacaoSenha String

  estadoNome Estado @relation(fields: [estado], references: [nome], onUpdate: Cascade, onDelete: Cascade)

  isActive Boolean
  created_at DateTime @default(now())
}

model FormPaciente {
  id                Int     @id @default(autoincrement())
  nome              String  @unique
  nomeDaMae         String
  aniversario       String
  idade             Int
  inicioDosSintomas String
  comorbidades      Boolean
  anamnese          String
}

model Estado {
  id        Int        @id @default(autoincrement())
  codigo_uf Int        @unique
  uf        String     @unique
  nome      String     @unique
  latitude  Float      @unique
  longitude Float      @unique
  regiao    String
  Medico    Medico[]
  Paciente  Paciente[]
}
